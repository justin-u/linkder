type User @model(queries: { get: "findUser" }, mutations: { create: "createUser", delete: "removeUser", update: "updateUser" }, subscriptions: null) {
  id:       ID!
  url:      String!
  availabilities: [Availability] @connection(name: "User2Availabilities")
  likes:        [Like]   @connection
  dislikes:     [Dislike] @connection
  firstName:    String!
  lastName:     String!
}

type Like @model(queries: null, mutations: { create: "createLike", delete: "removeLike" } , subscriptions: null) {
  id: ID!
  user: User! @connection
}

type Dislike @model(queries: null, mutations: { create: "createDislike", delete: "removeDisike" }, subscriptions: null) {
  id: ID!
  user: User! @connection
}

type Block @model(queries: { get: "findBlock" }, mutations: { create: "createBlock", delete: "removeBlock" }, subscriptions: null) {
  id: ID!
  availabilities: [Availability] @connection(name: "Block2Availabilities")
}

type Availability @model(queries: null, mutations: { create: "createAvailability", delete: "removeAvailability" }, subscriptions: null) {
  id: ID!
  user: User! @connection(name: "User2Availabilities")
  block: Block! @connection(name: "Block2Availabilities")
}