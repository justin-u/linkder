type User @model {

  id:       ID!
  url:      String!
  freeTimes:    [FreeTime]    @connection(name: "User2FreeTimes")
  likes:        [User]        @connection()
  dislikes:     [User]        @connection()
  firstName:    String!
  lastName:     String!
  defaultLatitude:  Float!
  defaultLongitude: Float!
}

type FreeTime @model {

  id:     ID!
  user:     User      @connection(name: "User2FreeTimes")
  freeTimePlaceTimes: [FreeTimePlaceTime] @connection(name: "FreeTime2FreeTimePlaceTimes")
  timestamp:   Int!
  longitude:    Float!
  latitude:   Float!
}

type FreeTimePlaceTime @model {

  id:     ID!
  freeTime:   FreeTime    @connection(name: "FreeTime2FreeTimePlaceTimes")
  placeTime:    PlaceTime   @connection(name: "FreeTimePlaceTimes2PlaceTime")   
}

type PlaceTime @model {

  id:     ID!
  dateString:   String!
  freeTimePlaceTimes: [FreeTimePlaceTime] @connection(name: "FreeTimePlaceTimes2PlaceTime")
  place:      Place       @connection(name: "PlaceTimes2Place")
}

type Place @model {

  id:     ID!
  placeTimes:   [PlaceTime]   @connection(name: "PlaceTimes2Place")
  name:     String!
}

type Education @model {

  id:             ID!
  school:         String!  
}

type Skill @model {

  id:       ID!
  name:     String!
}

type Certification @model {

  id:       ID!
  name:     String!
  company:  ID
  url:      String
}

type Language @model {

  id:           ID!
  name:         String!
}